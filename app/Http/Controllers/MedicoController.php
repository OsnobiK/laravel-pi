<?php

namespace App\Http\Controllers;

use App\Http\Controllers\Traits\CreatesNewUsers; // Importa o Trait
use Illuminate\Http\Request;
use App\Models\Medico;
use Illuminate\Support\Facades\DB;
use Illuminate\Support\Facades\Auth;

class MedicoController extends Controller
{
    use CreatesNewUsers; // "Usa" o Trait que contÃ©m a lÃ³gica de criar usuÃ¡rio

    /**
     * Mostra o formulÃ¡rio de cadastro de mÃ©dico.
     */
    public function create()
    {
        return view('cadastromedico');
    }

    /**
     * Salva o novo mÃ©dico e seu usuÃ¡rio correspondente.
     */
    public function store(Request $request)
    {
        // 1. Valida os campos que vÃªm do formulÃ¡rio, incluindo 'nome'.
        $request->validate([
            'nome' => ['required', 'string', 'max:255'], // Validamos o campo 'nome' que vem do formulÃ¡rio
            'especialidade' => ['required', 'string', 'max:100'],
            'crm' => ['required', 'string', 'max:20', 'unique:medicos,crm'],
        ]);

        // Usamos uma transaÃ§Ã£o para garantir que, se algo der errado, nada seja salvo.
        DB::beginTransaction();
        try {
            // 2. ðŸ‘‡ CORREÃ‡ÃƒO AQUI: "Traduzimos" o campo 'nome' para 'name' para o Trait entender.
            // O mÃ©todo merge adiciona ou substitui um valor na requisiÃ§Ã£o atual.
            $request->merge(['name' => $request->nome]);

            // 3. Chama o mÃ©todo do Trait, que agora receberÃ¡ o campo 'name' corretamente.
            $usuario = $this->createUser($request);

            // 4. Cria o perfil de MÃ‰DICO com os dados especÃ­ficos.
            Medico::create([
                'usuario_id' => $usuario->id,
                'especialidade' => $request->especialidade,
                'crm' => $request->crm,
            ]);

            // Se chegou atÃ© aqui, tudo deu certo. Confirma as operaÃ§Ãµes no banco.
            DB::commit();

            // Faz o login do novo usuÃ¡rio/mÃ©dico.
            Auth::login($usuario);

            // Redireciona com uma mensagem de sucesso.
            return redirect()->route('perfil.show')->with('success', 'Cadastro de mÃ©dico realizado com sucesso!');
            
        } catch (\Exception $e) {
            // Se qualquer erro acontecer, desfaz todas as operaÃ§Ãµes do banco.
            DB::rollBack();
            
            // Para depuraÃ§Ã£o, vocÃª pode descomentar a linha abaixo para ver o erro exato:
            // dd($e->getMessage());

            return back()->with('error', 'Houve um erro ao realizar o cadastro. Por favor, tente novamente.')->withInput();
        }
    }
}
